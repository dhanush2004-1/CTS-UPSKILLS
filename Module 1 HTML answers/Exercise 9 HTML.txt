<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Find Nearby Events</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      max-width: 400px;
      margin: 40px auto;
      padding: 20px;
      text-align: center;
    }
    button {
      padding: 12px 20px;
      font-size: 1em;
      background-color: #007BFF;
      border: none;
      border-radius: 6px;
      color: white;
      cursor: pointer;
    }
    button:hover {
      background-color: #0056b3;
    }
    #output {
      margin-top: 20px;
      font-weight: bold;
      color: #333;
    }
    #error {
      margin-top: 20px;
      color: red;
      font-weight: bold;
    }
  </style>
</head>
<body>

  <h2>Locate Nearest Event</h2>

  <button id="findEventsBtn">Find Nearby Events</button>

  <div id="output"></div>
  <div id="error"></div>

  <script>
    const btn = document.getElementById('findEventsBtn');
    const output = document.getElementById('output');
    const errorDiv = document.getElementById('error');

    btn.addEventListener('click', () => {
      output.textContent = 'Locatingâ€¦';
      errorDiv.textContent = '';

      if (!navigator.geolocation) {
        errorDiv.textContent = 'Geolocation is not supported by your browser.';
        output.textContent = '';
        return;
      }

      navigator.geolocation.getCurrentPosition(success, error, {
        enableHighAccuracy: true,
        timeout: 10000, // 10 seconds
        maximumAge: 0
      });
    });

    function success(position) {
      const latitude = position.coords.latitude.toFixed(6);
      const longitude = position.coords.longitude.toFixed(6);

      output.textContent = `Latitude: ${latitude}, Longitude: ${longitude}`;
      errorDiv.textContent = '';
      // Here you could add logic to find/display nearest events based on coords
    }

    function error(err) {
      output.textContent = '';
      switch(err.code) {
        case err.PERMISSION_DENIED:
          errorDiv.textContent = 'User denied the request for Geolocation.';
          break;
        case err.POSITION_UNAVAILABLE:
          errorDiv.textContent = 'Location information is unavailable.';
          break;
        case err.TIMEOUT:
          errorDiv.textContent = 'The request to get user location timed out.';
          break;
        default:
          errorDiv.textContent = 'An unknown error occurred.';
          break;
      }
    }
  </script>

</body>
</html>
